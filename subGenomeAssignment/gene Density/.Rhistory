p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
nsim = 500
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
nsim = 500
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
nsim = 5000
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
nsim = 5000
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
nsim = 50000
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
nsim = 5000
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
nsim = 5000
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
qqnorm(res)
nsim = 500
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
qqnorm(res)
nsim = 5
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
qqnorm(res)
nsim = 500
n = 100
p = 0.07
mu = (1-p)/p
sig = sqrt((1-p)/p^2)
res = rep(0, nsim)
for(i in 1:nsim){
Z = rnbinom(n,1,p)
res[i] = sqrt(n)/sig*(mean(Z) - mu)
}
hist(res,100,freq=FALSE)
x = seq(-3,3,0.01)
lines(x,dnorm(x))
qqnorm(res)
# Many simulations aim to estimate an average
# the following code block estimates the variance of a negative binomial distribution
nsim = 500
n = 3
p = 0.07
mu = (1-p)/p
var = rep(0, nsim)
for(i in 1:500){
Z = rnbinom(n,1,p)
var[i] = mean((Z-mu)^2)
}
mean(var)
# Many simulations aim to estimate an average
# the following code block estimates the variance of a negative binomial distribution
nsim = 500
n = 300
p = 0.07
mu = (1-p)/p
var = rep(0, nsim)
for(i in 1:500){
Z = rnbinom(n,1,p)
var[i] = mean((Z-mu)^2)
}
mean(var)
nsim = 5000
n = 3
p = 0.07
mu = (1-p)/p
var = rep(0, nsim)
for(i in 1:500){
Z = rnbinom(n,1,p)
var[i] = mean((Z-mu)^2)
}
mean(var)
nsim = 5000
n = 3
p = 0.07
mu = (1-p)/p
var = rep(0, nsim)
for(i in 1:500){
Z = rnbinom(n,1,p)
var[i] = mean((Z-mu)^2)
}
mean(var)
# the following code block estimates the variance of a negative binomial distribution
nsim = 5000
n = 3
p = 0.07
mu = (1-p)/p
var = rep(0, nsim)
for(i in 1:500){
Z = rnbinom(n,1,p)
var[i] = ((Z-mu)^2)
}
mean(var)
warnings()
# Many simulations aim to estimate an average
# the following code block estimates the variance of a negative binomial distribution
nsim = 5000
n = 3
p = 0.07
mu = (1-p)/p
var = rep(0, nsim)
for(i in 1:500){
Z = rnbinom(n,1,p)
var[i] = mean((Z-mu)^2)
}
mean(var)
q()
# Installing bioconductor
source("http://bioconductor.org/biocLite.R")
biocLite()
#Installing ggplot2
install.packages("ggplot2" , "reshape2")
library(ggplot2)
A=matrix(c(0,0,0,-1,0,0,0,-1,-1,1,0,-1,-1,1,0,-1),4,4,byrow=TRUE)
A
A%*%A
A%*%A%*%A
A%*%A%*%A%*%A
TRUE
sprintf('I love %s','hza')
?read.table
?optim
nbinom?
q
?nbinom
dnegbinom
?dnegbinom
?dnbinom
?optim
?dnbinom
?optim
?optim
?sample
library(karyoplotR)
install.packages(karyoplotR)
install.packages(karyoploteR)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("karyoploteR")
?gene
?genes
library(karyoploteR)
?genes
cd("C:\Users\10453\source\repos\subgenomeAssignment")
cd("C://Users//10453//source//repos//subgenomeAssignment")
wd("C://Users//10453//source//repos//subgenomeAssignment")
setwd("C://Users//10453//source//repos//subgenomeAssignment")
?readLines
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit('\t')))
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg
header.lines
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
gg
Ntab.genome = toGRanges(gg)
Ntab.genome
?as.numeric
kp <- plotKaryotype(genome=PvP01.genome, ideogram.plotter = NULL)
kp <- plotKaryotype(genome=Ntab.genome, ideogram.plotter = NULL)
kp <- plotKaryotype(genome=Ntab.genome, ideogram.plotter = NULL)
kp <- plotKaryotype(genome=Ntab.genome, ideogram.plotter = NULL)
kpAddCytobandsAsLine(kp)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
#gg[,2] = as.numeric(as.character(gg[,2]))
#gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome, ideogram.plotter = NULL)
kpAddCytobandsAsLine(kp)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
#gg[,2] = as.numeric(as.character(gg[,2]))
#gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome, ideogram.plotter = NULL)
kpAddCytobandsAsLine(kp)
?as.character
a = as.character('hza')
a
as.numeric(a)
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome, ideogram.plotter = NULL)
kpAddCytobandsAsLine(kp)
library(rtracklayer)
gff.nitab = import('x4-nitab5-v1.all.maker.fixed.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotRegions(kp, data=genes)
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome, ideogram.plotter = NULL)
kpAddCytobandsAsLine(kp)
library(rtracklayer)
gff.nitab = import('x4-nitab5-v1.all.maker.fixed.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes)
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,plot.type=6)
kpAddCytobandsAsLine(kp)
library(rtracklayer)
gff.nitab = import('x4-nitab5-v1.all.maker.fixed.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF")
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
kpAddCytobandsAsLine(kp)
library(rtracklayer)
gff.nitab = import('x4-nitab5-v1.all.maker.fixed.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF")
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF",border="#3388FF", r0=0.5, r1=1)
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
kpAddCytobandsAsLine(kp)
library(rtracklayer)
gff.nitab = import('x4-nitab5-v1.all.maker.fixed.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF",border="#3388FF", r0=0.5, r1=1)
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF",border="#3388FF", r0=0.5, r1=1)
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
kpAddCytobandsAsLine(kp)
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF",border="#3388FF", r0=0.5, r1=1)
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF",border="#3388FF", r0=0.5, r1=1)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF",border="#3388FF", r0=0.5, r1=1)
kpPlotDensity(kp, genes, data.panel='ideogram',col="#3388FF",border="#3388FF", r0=0.5, r1=1)
?kpPlotDensity
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF", r0=0.5, r1=1)
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF", r0=0.5, r1=1)
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=2e6,col="#3388FF",border="#3388FF", r0=0.5, r1=1)
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=2e6,col="#3388FF",border="#3388FF", r0=0.5, r1=1)
?kpPlotDensity
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=2e6,col="#3388FF",border="#3388FF")
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=2e6,col="#3388FF",border="#3388FF")
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF")
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF")
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.25e6,col="#3388FF",border="#3388FF")
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.25e6,col="#3388FF",border="#3388FF")
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF",r0=0.5,r1=1)
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF",r0=0.5,r1=0)
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF",r0=1,r1=1)
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF",r0=1,r1=0)
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.1-12')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.1-12.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF")
library(karyoploteR)
header.lines = readLines('Ntab.v5.chrom.sizes.13-24')
ll = header.lines[grepl(header.lines, pattern = 'Nitab')]
gg = data.frame(do.call(rbind, strsplit(ll, split = '\t')))
gg[,2] = as.numeric(as.character(gg[,2]))
gg[,3] = as.numeric(as.character(gg[,3]))
Ntab.genome = toGRanges(gg)
kp <- plotKaryotype(genome=Ntab.genome,ideogram.plotter=NULL,main='N.tabacum Gene Density')
library(rtracklayer)
gff.nitab = import('Nitab.13-24.gff')
genes = gff.nitab[gff.nitab$type == 'gene']
kpPlotDensity(kp, genes, data.panel='ideogram',window.size=0.5e6,col="#3388FF",border="#3388FF")

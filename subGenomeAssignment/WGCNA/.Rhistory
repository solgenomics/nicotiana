pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(label = percent(num/total.pair)),size=5,
position = position_stack(vjust = 0.5)) + ggtitle("S-biased homoelogs module-assignment in co-expression network")
ggsave("80% S-biased homoelogs module-assignment.png",
path='C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA/round4')
library(hash)
con = file('80%.T-biased.txt','r')
h = hash()
while(TRUE){
line = readLines(con,n = 1)
if(length(line) == 0){
break
}
pair = strsplit(trimws(line),"\t")[[1]]
#print(pair)
h[[pair[[1]]]] = pair[[2]]
}
close(con)
# query WGCNA object to see whether two genes in a pair belong to the same module
total.pair = 0
sameModule = 0
similarModule = 0
divergentModule = 0
eigenGene.matrix = t(as.matrix(bwMEs))
maxDist = max(dist(eigenGene.matrix, method="euclidean"))
d = vector()
for (Nsyl.g in keys(h)){
Ntom.g = h[[Nsyl.g]]
Nsyl.label = bwModuleLabels[Nsyl.g]
Ntom.label = bwModuleLabels[Ntom.g]
if (is.na(Nsyl.label) | is.na(Ntom.label)){
next
}
total.pair = total.pair + 1
Nsyl.ME = bwMEs[,paste('ME',Nsyl.label,sep="")]
Ntom.ME = bwMEs[,paste('ME',Ntom.label,sep="")]
dist = sqrt(sum((Nsyl.ME - Ntom.ME)^2))
d = c(d,dist)
if (dist != 0){
# check how divergent these two modules are
if (dist <= 0.5*maxDist){
similarModule = similarModule + 1
}else{
divergentModule = divergentModule + 1
}
}
else{
if (Nsyl.label == 0){
divergentModule = divergentModule + 1
}
else{
sameModule = sameModule + 1
}
}
}
library(ggplot2)
# first draw a histogram of dist between all homoelogs
qplot(d, geom="histogram")
# plot pie chart and save it to disk
df = data.frame(
category=c(sprintf("same module(%s)", sameModule),
sprintf("similar module(%s)", similarModule),
sprintf("divergent module(%s)", divergentModule)),
num = c(sameModule, similarModule, divergentModule)
)
bp<- ggplot(df, aes(x="", y=num, fill=category))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(label = percent(num/total.pair)),size=5,
position = position_stack(vjust = 0.5)) + ggtitle("T-biased homoelogs module-assignment in co-expression network")
ggsave("80% T-biased homoelogs module-assignment.png",
path='C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA/round4')
setwd("C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA")
options(stringsAsFactors=FALSE)
library(WGCNA)
lnames = load(file="./round3/Ntab.network.RData")
# first load a file specifying homeologous gene pairs and store them in a dictionary
library(hash)
con = file('80%.T-biased.txt','r')
h = hash()
while(TRUE){
line = readLines(con,n = 1)
if(length(line) == 0){
break
}
pair = strsplit(trimws(line),"\t")[[1]]
#print(pair)
h[[pair[[1]]]] = pair[[2]]
}
close(con)
# query WGCNA object to see whether two genes in a pair belong to the same module
total.pair = 0
sameModule = 0
similarModule = 0
divergentModule = 0
eigenGene.matrix = t(as.matrix(bwMEs))
maxDist = max(dist(eigenGene.matrix, method="euclidean"))
d = vector()
for (Nsyl.g in keys(h)){
Ntom.g = h[[Nsyl.g]]
Nsyl.label = bwModuleLabels[Nsyl.g]
Ntom.label = bwModuleLabels[Ntom.g]
if (is.na(Nsyl.label) | is.na(Ntom.label)){
next
}
total.pair = total.pair + 1
Nsyl.ME = bwMEs[,paste('ME',Nsyl.label,sep="")]
Ntom.ME = bwMEs[,paste('ME',Ntom.label,sep="")]
dist = sqrt(sum((Nsyl.ME - Ntom.ME)^2))
d = c(d,dist)
if (dist != 0){
# check how divergent these two modules are
if (dist <= 0.5*maxDist){
similarModule = similarModule + 1
}else{
divergentModule = divergentModule + 1
}
}
else{
if (Nsyl.label == 0){
divergentModule = divergentModule + 1
}
else{
sameModule = sameModule + 1
}
}
}
library(ggplot2)
# first draw a histogram of dist between all homoelogs
qplot(d, geom="histogram")
# plot pie chart and save it to disk
df = data.frame(
category=c(sprintf("same module(%s)", sameModule),
sprintf("similar module(%s)", similarModule),
sprintf("divergent module(%s)", divergentModule)),
num = c(sameModule, similarModule, divergentModule)
)
bp<- ggplot(df, aes(x="", y=num, fill=category))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(label = percent(num/total.pair)),size=5,
position = position_stack(vjust = 0.5)) + ggtitle("T-biased homoelogs module-assignment in co-expression network")
ggsave("80% T-biased homoelogs module-assignment.png",
path='C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA/round3')
# first load a file specifying homeologous gene pairs and store them in a dictionary
library(hash)
con = file('80%.S-biased.txt','r')
h = hash()
while(TRUE){
line = readLines(con,n = 1)
if(length(line) == 0){
break
}
pair = strsplit(trimws(line),"\t")[[1]]
#print(pair)
h[[pair[[1]]]] = pair[[2]]
}
close(con)
# query WGCNA object to see whether two genes in a pair belong to the same module
total.pair = 0
sameModule = 0
similarModule = 0
divergentModule = 0
eigenGene.matrix = t(as.matrix(bwMEs))
maxDist = max(dist(eigenGene.matrix, method="euclidean"))
d = vector()
for (Nsyl.g in keys(h)){
Ntom.g = h[[Nsyl.g]]
Nsyl.label = bwModuleLabels[Nsyl.g]
Ntom.label = bwModuleLabels[Ntom.g]
if (is.na(Nsyl.label) | is.na(Ntom.label)){
next
}
total.pair = total.pair + 1
Nsyl.ME = bwMEs[,paste('ME',Nsyl.label,sep="")]
Ntom.ME = bwMEs[,paste('ME',Ntom.label,sep="")]
dist = sqrt(sum((Nsyl.ME - Ntom.ME)^2))
d = c(d,dist)
if (dist != 0){
# check how divergent these two modules are
if (dist <= 0.5*maxDist){
similarModule = similarModule + 1
}else{
divergentModule = divergentModule + 1
}
}
else{
if (Nsyl.label == 0){
divergentModule = divergentModule + 1
}
else{
sameModule = sameModule + 1
}
}
}
library(ggplot2)
# first draw a histogram of dist between all homoelogs
qplot(d, geom="histogram")
# plot pie chart and save it to disk
df = data.frame(
category=c(sprintf("same module(%s)", sameModule),
sprintf("similar module(%s)", similarModule),
sprintf("divergent module(%s)", divergentModule)),
num = c(sameModule, similarModule, divergentModule)
)
bp<- ggplot(df, aes(x="", y=num, fill=category))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(label = percent(num/total.pair)),size=5,
position = position_stack(vjust = 0.5)) + ggtitle("S-biased homoelogs module-assignment in co-expression network")
ggsave("80% S-biased homoelogs module-assignment.png",
path='C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA/round3')
library(hash)
con = file('80%.S-biased.txt','r')
h = hash()
while(TRUE){
line = readLines(con,n = 1)
if(length(line) == 0){
break
}
pair = strsplit(trimws(line),"\t")[[1]]
#print(pair)
h[[pair[[1]]]] = pair[[2]]
}
close(con)
# query WGCNA object to see whether two genes in a pair belong to the same module
total.pair = 0
sameModule = 0
similarModule = 0
divergentModule = 0
eigenGene.matrix = t(as.matrix(bwMEs))
maxDist = max(dist(eigenGene.matrix, method="euclidean"))
d = vector()
for (Nsyl.g in keys(h)){
Ntom.g = h[[Nsyl.g]]
Nsyl.label = bwModuleLabels[Nsyl.g]
Ntom.label = bwModuleLabels[Ntom.g]
if (is.na(Nsyl.label) | is.na(Ntom.label)){
next
}
total.pair = total.pair + 1
Nsyl.ME = bwMEs[,paste('ME',Nsyl.label,sep="")]
Ntom.ME = bwMEs[,paste('ME',Ntom.label,sep="")]
dist = sqrt(sum((Nsyl.ME - Ntom.ME)^2))
d = c(d,dist)
if (dist != 0){
# check how divergent these two modules are
if (dist <= 0.5*maxDist){
similarModule = similarModule + 1
}else{
divergentModule = divergentModule + 1
}
}
else{
if (Nsyl.label == 0){
divergentModule = divergentModule + 1
}
else{
sameModule = sameModule + 1
}
}
}
library(ggplot2)
# first draw a histogram of dist between all homoelogs
qplot(d, geom="histogram")
# plot pie chart and save it to disk
df = data.frame(
category=c(sprintf("same module(%s)", sameModule),
sprintf("similar module(%s)", similarModule),
sprintf("divergent module(%s)", divergentModule)),
num = c(sameModule, similarModule, divergentModule)
)
bp<- ggplot(df, aes(x="", y=num, fill=category))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(label = percent(num/total.pair)),size=5,
position = position_stack(vjust = 0.5)) + ggtitle("S-biased homoelogs module-assignment in co-expression network")
ggsave("80%% S-biased homoelogs module-assignment.png",
path='C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA/round3')
# first load a file specifying homeologous gene pairs and store them in a dictionary
library(hash)
con = file('80%.T-biased.txt','r')
h = hash()
while(TRUE){
line = readLines(con,n = 1)
if(length(line) == 0){
break
}
pair = strsplit(trimws(line),"\t")[[1]]
#print(pair)
h[[pair[[1]]]] = pair[[2]]
}
close(con)
# query WGCNA object to see whether two genes in a pair belong to the same module
total.pair = 0
sameModule = 0
similarModule = 0
divergentModule = 0
eigenGene.matrix = t(as.matrix(bwMEs))
maxDist = max(dist(eigenGene.matrix, method="euclidean"))
d = vector()
for (Nsyl.g in keys(h)){
Ntom.g = h[[Nsyl.g]]
Nsyl.label = bwModuleLabels[Nsyl.g]
Ntom.label = bwModuleLabels[Ntom.g]
if (is.na(Nsyl.label) | is.na(Ntom.label)){
next
}
total.pair = total.pair + 1
Nsyl.ME = bwMEs[,paste('ME',Nsyl.label,sep="")]
Ntom.ME = bwMEs[,paste('ME',Ntom.label,sep="")]
dist = sqrt(sum((Nsyl.ME - Ntom.ME)^2))
d = c(d,dist)
if (dist != 0){
# check how divergent these two modules are
if (dist <= 0.5*maxDist){
similarModule = similarModule + 1
}else{
divergentModule = divergentModule + 1
}
}
else{
if (Nsyl.label == 0){
divergentModule = divergentModule + 1
}
else{
sameModule = sameModule + 1
}
}
}
library(ggplot2)
# first draw a histogram of dist between all homoelogs
qplot(d, geom="histogram")
# plot pie chart and save it to disk
df = data.frame(
category=c(sprintf("same module(%s)", sameModule),
sprintf("similar module(%s)", similarModule),
sprintf("divergent module(%s)", divergentModule)),
num = c(sameModule, similarModule, divergentModule)
)
bp<- ggplot(df, aes(x="", y=num, fill=category))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(label = percent(num/total.pair)),size=5,
position = position_stack(vjust = 0.5)) + ggtitle("T-biased homoelogs module-assignment in co-expression network")
ggsave("80%% T-biased homoelogs module-assignment.png",
path='C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA/round3')
setwd("C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA")
options(stringsAsFactors=FALSE)
library(WGCNA)
lnames = load(file="./round4/Ntab.network.RData")
# first load a file specifying homeologous gene pairs and store them in a dictionary
library(hash)
con = file('80%.T-biased.txt','r')
h = hash()
while(TRUE){
line = readLines(con,n = 1)
if(length(line) == 0){
break
}
pair = strsplit(trimws(line),"\t")[[1]]
#print(pair)
h[[pair[[1]]]] = pair[[2]]
}
close(con)
# query WGCNA object to see whether two genes in a pair belong to the same module
total.pair = 0
sameModule = 0
similarModule = 0
divergentModule = 0
eigenGene.matrix = t(as.matrix(bwMEs))
maxDist = max(dist(eigenGene.matrix, method="euclidean"))
d = vector()
for (Nsyl.g in keys(h)){
Ntom.g = h[[Nsyl.g]]
Nsyl.label = bwModuleLabels[Nsyl.g]
Ntom.label = bwModuleLabels[Ntom.g]
if (is.na(Nsyl.label) | is.na(Ntom.label)){
next
}
total.pair = total.pair + 1
Nsyl.ME = bwMEs[,paste('ME',Nsyl.label,sep="")]
Ntom.ME = bwMEs[,paste('ME',Ntom.label,sep="")]
dist = sqrt(sum((Nsyl.ME - Ntom.ME)^2))
d = c(d,dist)
if (dist != 0){
# check how divergent these two modules are
if (dist <= 0.5*maxDist){
similarModule = similarModule + 1
}else{
divergentModule = divergentModule + 1
}
}
else{
if (Nsyl.label == 0){
divergentModule = divergentModule + 1
}
else{
sameModule = sameModule + 1
}
}
}
library(ggplot2)
# first draw a histogram of dist between all homoelogs
qplot(d, geom="histogram")
# plot pie chart and save it to disk
df = data.frame(
category=c(sprintf("same module(%s)", sameModule),
sprintf("similar module(%s)", similarModule),
sprintf("divergent module(%s)", divergentModule)),
num = c(sameModule, similarModule, divergentModule)
)
bp<- ggplot(df, aes(x="", y=num, fill=category))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie + scale_fill_grey() +  blank_theme +
theme(axis.text.x=element_blank()) +
geom_text(aes(label = percent(num/total.pair)),size=5,
position = position_stack(vjust = 0.5)) + ggtitle("T-biased homoelogs module-assignment in co-expression network")
ggsave("80%% T-biased homoelogs module-assignment.png",
path='C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA/round4')
# first draw a histogram of dist between all homoelogs
qplot(d, geom="histogram")

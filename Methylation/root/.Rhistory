ggsave("homeologous gene in co-expression network.root.80%%.png",plot=p_root_08,
path='C:/Users/10453/source/repos/SGN/nicotiana/subGenomeAssignment/WGCNA')
?acf
?mean
a=c(1:3)
a
a[1]
a[[1]]
a-1
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
a/a[2]
my_acf = function(X, maxLag){
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h] = sum((temp1-mu)*(temp2-mu))/N
}
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
?sum
my_acf = function(X, maxLag){
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
mu = mean(X)
N = length(X)
print(mu)
print(N)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
x
?mean
length(x)
?length(x)
?length
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
print(mu)
print(N)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
print(mu)
print(N)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
print(mu)
print(N)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
?abline
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
abline(h=1/sqrt(N), color='blue', lty=2)
abline(h=-1/sqrt(N), color='blue', lty=2)
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
abline(h=1/sqrt(N), col='blue', lty=2)
abline(h=-1/sqrt(N), col='blue', lty=2)
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF')
abline(h=1/sqrt(N), col='blue', lty=2)
abline(h=-1/sqrt(N), col='blue', lty=2)
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF', type='h')
abline(h=2/sqrt(N), col='blue', lty=2)
abline(h=-2/sqrt(N), col='blue', lty=2)
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF', type='h')
abline(h=2/sqrt(N), col='blue', lty=2)
abline(h=-2/sqrt(N), col='blue', lty=2)
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf = function(X, maxLag){
X = X[!is.na(X)]
mu = mean(X)
N = length(X)
gamma_h = rep(0, maxLag+1)
for (h in 0:maxLag){
temp1 = X[1:(length(X)-h)]
temp2 = X[(1+h):length(X)]
gamma_h[h+1] = sum((temp1-mu)*(temp2-mu))/N
}
print(gamma_h)
plot(c(0:maxLag), gamma_h/gamma_h[1], main='Sample ACF', xlab='Lag', ylab='ACF', type='h')
abline(h=2/sqrt(N), col='blue', lty=2)
abline(h=-2/sqrt(N), col='blue', lty=2)
abline(h=0, lty=2)
}
#simulate filtered Gaussian White Noise
T <- 100
w <- rnorm(T)
x <- filter(w, sides=2, filter=rep(1/3,3))
lagmax = 10
acf(x, na.action=na.omit, lag.max=lagmax, main='Sample ACF')
my_acf(x, lagmax)
setwd("C:/Users/10453/source/repos/SGN/nicotiana/Methylation/root")
library(cowplot)
library(ggplot2)
p1 <- readRDS("K326_root_MethOverRegion_CG.pdf.rds")
p2 <- readRDS("K326_root_MethOverRegion_CHG.pdf.rds")
p3 <- readRDS("K326_root_MethOverRegion_CHH.pdf.rds")
p4 <- readRDS("K326_unbiased_MethOverRegion_CG.pdf.rds")
p5 <- readRDS("K326_unbiased_MethOverRegion_CHG.pdf.rds")
p6 <- readRDS("K326_unbiased_MethOverRegion_CHH.pdf.rds")
p7 <- readRDS("K326_S-biased_MethOverRegion_CG.pdf.rds")
p8 <- readRDS("K326_S-biased_MethOverRegion_CHG.pdf.rds")
p9 <- readRDS("K326_S-biased_MethOverRegion_CHH.pdf.rds")
p10 <- readRDS("K326_T-biased_MethOverRegion_CG.pdf.rds")
p11 <- readRDS("K326_T-biased_MethOverRegion_CHG.pdf.rds")
p12 <- readRDS("K326_T-biased_MethOverRegion_CHH.pdf.rds")
title1 <- ggdraw() + draw_label("All Homeologous Gene Pairs", fontface='bold')
title2 = ggdraw() + draw_label("Unbiased Genes", fontface='bold')
title3 = ggdraw() + draw_label("S-biased Genes", fontface='bold')
title4 = ggdraw() + draw_label("T-biased Genes", fontface='bold')
plot_all <- plot_grid(p1,p2,p3,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_all = plot_grid(title1, plot_all, ncol=1, rel_heights=c(0.1, 1))
plot_unbiased <- plot_grid(p4,p5,p6,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_unbiased = plot_grid(title2, plot_unbiased, ncol=1, rel_heights=c(0.1, 1))
plot_S <- plot_grid(p7,p8,p9,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_S = plot_grid(title3, plot_S, ncol=1, rel_heights=c(0.1, 1))
plot_T <- plot_grid(p10,p11,p12,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_T = plot_grid(title4, plot_T, ncol=1, rel_heights=c(0.1, 1))
#plot_aggregate = plot_grid(plot_all, plot_unbiased, plot_S, plot_T, ncol=1)
#save_plot('K326.shoot.jpg', plot_aggregate, base_aspect_ratio = 2)
save_plot("k326.root.all.jpg", plot_all,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.unbiased.jpg", plot_unbiased,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.S.jpg", plot_S,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.T.jpg", plot_T,
ncol = 3,
base_aspect_ratio = 2
)
setwd("C:/Users/10453/source/repos/SGN/nicotiana/Methylation/root")
library(cowplot)
library(ggplot2)
p1 <- readRDS("K326_root_MethOverRegion_CG.pdf.rds")
p2 <- readRDS("K326_root_MethOverRegion_CHG.pdf.rds")
p3 <- readRDS("K326_root_MethOverRegion_CHH.pdf.rds")
p4 <- readRDS("K326_unbiased_MethOverRegion_CG.pdf.rds")
p5 <- readRDS("K326_unbiased_MethOverRegion_CHG.pdf.rds")
p6 <- readRDS("K326_unbiased_MethOverRegion_CHH.pdf.rds")
p7 <- readRDS("K326_S-biased_MethOverRegion_CG.pdf.rds")
p8 <- readRDS("K326_S-biased_MethOverRegion_CHG.pdf.rds")
p9 <- readRDS("K326_S-biased_MethOverRegion_CHH.pdf.rds")
p10 <- readRDS("K326_T-biased_MethOverRegion_CG.pdf.rds")
p11 <- readRDS("K326_T-biased_MethOverRegion_CHG.pdf.rds")
p12 <- readRDS("K326_T-biased_MethOverRegion_CHH.pdf.rds")
title1 <- ggdraw() + draw_label("All Homeologous Gene Pairs", fontface='bold')
title2 = ggdraw() + draw_label("Unbiased Genes", fontface='bold')
title3 = ggdraw() + draw_label("S-biased Genes", fontface='bold')
title4 = ggdraw() + draw_label("T-biased Genes", fontface='bold')
plot_all <- plot_grid(p1,p2,p3,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_all = plot_grid(title1, plot_all, ncol=1, rel_heights=c(0.1, 1))
plot_unbiased <- plot_grid(p4,p5,p6,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_unbiased = plot_grid(title2, plot_unbiased, ncol=1, rel_heights=c(0.1, 1))
plot_S <- plot_grid(p7,p8,p9,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_S = plot_grid(title3, plot_S, ncol=1, rel_heights=c(0.1, 1))
plot_T <- plot_grid(p10,p11,p12,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_T = plot_grid(title4, plot_T, ncol=1, rel_heights=c(0.1, 1))
#plot_aggregate = plot_grid(plot_all, plot_unbiased, plot_S, plot_T, ncol=1)
#save_plot('K326.shoot.jpg', plot_aggregate, base_aspect_ratio = 2)
save_plot("k326.root.all.jpg", plot_all,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.unbiased.jpg", plot_unbiased,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.S.jpg", plot_S,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.T.jpg", plot_T,
ncol = 3,
base_aspect_ratio = 2
)
setwd("C:/Users/10453/source/repos/SGN/nicotiana/Methylation/root")
library(cowplot)
library(ggplot2)
p1 <- readRDS("K326_root_MethOverRegion_CG.pdf.rds")
p2 <- readRDS("K326_root_MethOverRegion_CHG.pdf.rds")
p3 <- readRDS("K326_root_MethOverRegion_CHH.pdf.rds")
p4 <- readRDS("K326_unbiased_MethOverRegion_CG.pdf.rds")
p5 <- readRDS("K326_unbiased_MethOverRegion_CHG.pdf.rds")
p6 <- readRDS("K326_unbiased_MethOverRegion_CHH.pdf.rds")
p7 <- readRDS("K326_S-biased_MethOverRegion_CG.pdf.rds")
p8 <- readRDS("K326_S-biased_MethOverRegion_CHG.pdf.rds")
p9 <- readRDS("K326_S-biased_MethOverRegion_CHH.pdf.rds")
p10 <- readRDS("K326_T-biased_MethOverRegion_CG.pdf.rds")
p11 <- readRDS("K326_T-biased_MethOverRegion_CHG.pdf.rds")
p12 <- readRDS("K326_T-biased_MethOverRegion_CHH.pdf.rds")
title1 <- ggdraw() + draw_label("All Homeologous Gene Pairs", fontface='bold')
title2 = ggdraw() + draw_label("Unbiased Genes", fontface='bold')
title3 = ggdraw() + draw_label("S-biased Genes", fontface='bold')
title4 = ggdraw() + draw_label("T-biased Genes", fontface='bold')
plot_all <- plot_grid(p1,p2,p3,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_all = plot_grid(title1, plot_all, ncol=1, rel_heights=c(0.1, 1))
plot_unbiased <- plot_grid(p4,p5,p6,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_unbiased = plot_grid(title2, plot_unbiased, ncol=1, rel_heights=c(0.1, 1))
plot_S <- plot_grid(p7,p8,p9,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_S = plot_grid(title3, plot_S, ncol=1, rel_heights=c(0.1, 1))
plot_T <- plot_grid(p10,p11,p12,
labels=c('CpG','CHG','CHH'), label_size=8, label_x = 0, label_y = 0,
ncol = 3)
plot_T = plot_grid(title4, plot_T, ncol=1, rel_heights=c(0.1, 1))
#plot_aggregate = plot_grid(plot_all, plot_unbiased, plot_S, plot_T, ncol=1)
#save_plot('K326.shoot.jpg', plot_aggregate, base_aspect_ratio = 2)
save_plot("k326.root.all.jpg", plot_all,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.unbiased.jpg", plot_unbiased,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.S.jpg", plot_S,
ncol = 3,
base_aspect_ratio = 2
)
save_plot("k326.root.T.jpg", plot_T,
ncol = 3,
base_aspect_ratio = 2
)
